
1.节点状态

	1. 运行中-Running
	
	2. 成功-Success
	
	3. 失败-Failure

1.节点类型
	
	1. 组合节点-Composite

		1.选择(selector)节点：或逻辑

			选择节点就是次序节点的反面。作为“与门”的次序节点要求子节点都返回 Success 来让自己返回 Success，
			选择节点则会在任何一个子节点返回 Success 时就返回 Success 并且不再继续运行后续的子节点。
			相应的，当所有子节点都 Failure 时，选择节点才会返回 Failure。选择节点其实可以被理解为一个“或门”（OR gate）

		2.序列(sequence)节点 :  与逻辑
				
			次序节点会依次（译者：通常是从左到右）访问子节点。每个子节点成功之后便轮到下一个，直到最后。
			如果所有子节点都 Success，则向序列节点返回 Success；其间任何一个子节点返回 Failure，就会立即向序列节点(父节点)返回 Failure 的结果(就不执行后面的节点)
			（译者：用“和 and”的方式来理解次序节点就会非常清楚了）

		3.并行(parallel)节点

			将所有子节点运行一篇

	2. 修饰节点-Decorator : 只有一个子节点

		1.逆变节点-Inverter

			他会反置或否定子节点的结果

		2.成功节点-Succeeder

			成功节点不管它的子节点向其返回的结果为何，它总是返回 Success 的结果

		3.重复节点-Repeater

			重复节点会在它的子节点返回结果后反复继续执行它。重复节点常常被用在一棵树的最顶部来确保树的持续运行。
			另外重复节点也可以被设定重复执行的次数

		4.重复直至失败节点-Repeat Until Fail
			
			类似重复节点重复执行子节点，但这一节点会在子节点 Failure 的时候返回 Failure
			
	3. 叶节点-Leaf


